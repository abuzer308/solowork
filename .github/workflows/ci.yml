name: CI Pipeline

on:
  push:
    branches:
      - main  # Пайплайн будет запускаться при пуше в основную ветку (main)
  pull_request:
    branches:
      - main  # Пайплайн также будет запускаться при открытии pull request'а на main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Клонируем репозиторий
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Указываем версию Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt  # Устанавливаем зависимости из requirements-dev.txt
      - name: Run Ruff (Linter)
        run: ruff check .  # Запускаем линтинг с помощью ruff

  test:
    runs-on: ubuntu-latest
    needs: lint  # Job 'test' будет выполняться только после успешного завершения 'lint'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Клонируем репозиторий
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Указываем версию Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt  # Устанавливаем зависимости
      - name: Run Tests
        run: pytest -q --junitxml=report.xml  # Запускаем тесты и генерируем отчёт в формате JUnit
      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: report.xml  # Загружаем отчёт о тестах как артефакт
